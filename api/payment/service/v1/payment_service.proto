syntax = "proto3";

package payment.service.v1;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "api/payment/service/v1/requests/create_payment_request.proto";
import "api/payment/service/v1/responses/create_payment_response.proto";
import "api/payment/service/v1/requests/get_payment_request.proto";
import "api/payment/service/v1/responses/get_payment_response.proto";
import "api/payment/service/v1/requests/list_payments_request.proto";
import "api/payment/service/v1/responses/list_payments_response.proto";

option go_package = "github.com/LexBokun/yoomoney-to-crypto/pkg/api/payment/service/v1";

service PaymentService {
  rpc Create(payment.service.v1.requests.CreateRequest) returns (payment.service.v1.responses.CreateResponse) {
    option (google.api.http) = {post: "/payment/v1/create" body: "*"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "payment"
      summary: "Создание нового платежа"
      description: "Этот метод позволяет создать новый платеж"
    };
  }

  rpc Get(payment.service.v1.requests.GetRequest) returns (payment.service.v1.responses.GetResponse) {
    option (google.api.http) = {get: "/payment/v1/{id}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "payment"
      summary: "Получение платежа по ID"
      description: "Этот метод возвращает информацию о платеже по его уникальному идентификатору"
    };
  }

  rpc List(payment.service.v1.requests.ListRequest) returns (payment.service.v1.responses.ListResponse) {
    option (google.api.http) = {get: "/payment/v1/list"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "payment"
      summary: "Получение списка платежей"
      description: "Этот метод возвращает список всех платежей"
    };
  }
}
